version: '3.8'

services:
  anomaly-reaper:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      # For persistent data and configuration
      - ./data:/app/data
      - ./models:/app/models
      - ./uploads:/app/uploads
      # Mount Google Cloud credentials for authentication
      - ${GOOGLE_APPLICATION_CREDENTIALS:-~/.config/gcloud/application_default_credentials.json}:/app/google-credentials.json:ro
    env_file:
      - .env
    environment:
      # Configure application settings
      - PYTHONPATH=/app
      - GOOGLE_APPLICATION_CREDENTIALS=/app/google-credentials.json
      - ANOMALY_REAPER_UPLOADS_DIR=/app/uploads
      - ANOMALY_REAPER_MODELS_DIR=/app/models
      # Override database URL to use PostgreSQL
      - ANOMALY_REAPER_DB_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-anomaly_reaper}
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-anomaly_reaper}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data: